<Window x:Class="H2MLauncher.UI.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:H2MLauncher.UI"
        xmlns:view="clr-namespace:H2MLauncher.UI.View" 
        xmlns:vm="clr-namespace:H2MLauncher.UI.ViewModels" 
        xmlns:models="clr-namespace:H2MLauncher.Core.Models;assembly=H2MLauncher.Core" 
        xmlns:dialog="clr-namespace:H2MLauncher.UI.Dialog" 
        xmlns:converters="clr-namespace:H2MLauncher.UI.Converters" 
        xmlns:dialogviews="clr-namespace:H2MLauncher.UI.Dialog.Views" 
        d:DataContext="{d:DesignInstance Type=vm:ServerBrowserViewModel}"
        x:Name="mainWindow"
        AllowsTransparency="True"
        WindowStyle="None"
        ResizeMode="CanResizeWithGrip"
        MinHeight="576"
        MinWidth="1030"
        Width="1030"
        Height="576"
        Background="Transparent"
        mc:Ignorable="d"
        MouseDown="Window_MouseDown"
        KeyDown="Window_KeyDown"
        Icon="Assets/icon.ico"
        xmlns:i="http://schemas.microsoft.com/xaml/behaviors"
        Title="Better H2M-Launcher">
    <i:Interaction.Triggers>
        <i:EventTrigger EventName="Loaded">
            <i:InvokeCommandAction Command="{Binding CheckUpdateStatusCommand}"/>
        </i:EventTrigger>
    </i:Interaction.Triggers>
    <Window.Resources>
        <Style TargetType="DataGridCell">
            <Setter Property="TextBlock.TextAlignment" Value="Left" />
            <Setter Property="TextBlock.VerticalAlignment" Value="Center" />
            <Setter Property="TextBlock.Foreground" Value="White" />
            <Setter Property="Background" Value="Transparent" />
            <Setter Property="VerticalAlignment" Value="Stretch"/>
            <Setter Property="Padding" Value="0"/>
            <Setter Property="Margin" Value="0"/>
            <Setter Property="BorderThickness" Value="0"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>

            <!-- Custom template to center content -->
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type DataGridCell}">
                        <Grid Background="{TemplateBinding Background}">
                            <ContentPresenter VerticalAlignment="Center" />
                        </Grid>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>

            <!-- Disable focus for cells -->
            <Setter Property="FocusVisualStyle" Value="{x:Null}" />
            <Setter Property="Focusable" Value="False"/>
            <Setter Property="IsTabStop" Value="False"/>

            <Style.Triggers>
                <Trigger Property="IsSelected" Value="True">
                    <!-- Selection background -->
                    <Setter Property="Background" Value="#252525"></Setter>
                </Trigger>
            </Style.Triggers>
        </Style>
        <converters:PingColorConverter x:Key="PingColorConverter"/>
        <converters:BooleanToStarConverter x:Key="BooleanToStarConverter"/>
        <converters:BooleanToPrivateStatusConverter x:Key="BooleanToPrivateStatusConverter"/>

        <local:PlayersSorter x:Key="PlayersSorter"/>
    </Window.Resources>
    <Window.InputBindings>
        <!-- Disable Shortcut Commands -->
        <KeyBinding Key="S" Modifiers="Ctrl" Command="{Binding SaveServersCommand}" />
        <KeyBinding view:InputBinding.Shortcut="{Binding Shortcuts.RefreshServers}" Command="{Binding RefreshServersCommand}" />
        <KeyBinding view:InputBinding.Shortcut="{Binding Shortcuts.Reconnect}" Command="{Binding ReconnectCommand}"/>
    </Window.InputBindings>
    <Grid>
        <Border CornerRadius="10" Padding="10,10" Background="Black"/>
        <Border CornerRadius="10" Padding="10,10">
            <Border.Background>
                <ImageBrush Stretch="UniformToFill" ImageSource="pack://application:,,,/H2MLauncher.UI;component/Assets/Background.jpg" Opacity="1"/>
            </Border.Background>
            <Grid Margin="0,0,0,0">
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="*"/>
                    <RowDefinition Height="Auto"/>
                </Grid.RowDefinitions>
                <Grid Grid.Row="0" Margin="0,0,0,0">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="*" />
                        <ColumnDefinition Width="Auto" />
                        <ColumnDefinition Width="85" />
                    </Grid.ColumnDefinitions>
                    <TextBlock Grid.Column="0" Text="H2M Launcher" FontSize="30" FontWeight="Bold" Foreground="White"/>
                    <TextBlock Grid.Column="1" Text="{Binding UpdateStatusText}" Foreground="White" FontSize="20" HorizontalAlignment="Right" FontWeight="Bold" Padding="5">
                        <TextBlock.Style>
                            <Style TargetType="TextBlock">
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding UpdateLauncherCommand.IsRunning}" Value="True">
                                        <Setter Property="Visibility"  Value="Hidden"/>
                                    </DataTrigger>
                                    <DataTrigger Binding="{Binding UpdateFinished}" Value="True">
                                        <Setter Property="Visibility"  Value="Hidden"/>
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </TextBlock.Style>
                    <i:Interaction.Triggers>
                        <i:EventTrigger EventName="PreviewMouseDown">
                            <i:InvokeCommandAction Command="{Binding UpdateLauncherCommand}"/>
                        </i:EventTrigger>
                    </i:Interaction.Triggers>
                    </TextBlock>
                    <Grid Grid.Column="1" HorizontalAlignment="Right" Width="250" Height="30" Visibility="{Binding UpdateLauncherCommand.IsRunning, Converter={StaticResource booleanToVisibilityConverter}}">
                        <ProgressBar Name="PbStatus" Width="250" Height="30" Value="{Binding UpdateDownloadProgress, Mode=OneWay}" />
                        <TextBlock Text="{Binding ElementName=PbStatus, Path=Value, StringFormat={}{0:0}%}" HorizontalAlignment="Center" VerticalAlignment="Center" />
                    </Grid>
                    <Grid Grid.Column="1" Width="Auto" HorizontalAlignment="Right" Height="30" Visibility="{Binding UpdateFinished, Converter={StaticResource booleanToVisibilityConverter}}">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="122" />
                            <ColumnDefinition Width="6" />
                            <ColumnDefinition Width="122" />
                        </Grid.ColumnDefinitions>
                        <Button Grid.Column="0" Content="Open release notes" Command="{Binding OpenReleaseNotesCommand}" />
                        <Button Grid.Column="2" Content="Restart" Command="{Binding RestartCommand}" />
                    </Grid>
                    <StackPanel Orientation="Horizontal" VerticalAlignment="Top" HorizontalAlignment="Right" 
                                Grid.Column="2" Margin="1,0,0,0">
                        <Button Style="{StaticResource WindowButtonStyle}" Margin="0,0,2,0" 
                                FontSize="18" Height="27" Width="26" Click="MinimizeButton_Click"
                                Opacity="0.85" Padding="0,0,0,4" TextBlock.TextAlignment="Center" >
                            <Button.Content>
                                <TextBlock Text="&#128469;&#xFE0E;" Margin="0,-1,0,0" Width="20" TextWrapping="Wrap" />
                            </Button.Content>
                        </Button>
                        <Button Style="{StaticResource WindowButtonStyle}" Margin="0,0,2,0" 
                                FontSize="18" Height="27" Width="26" Click="MaximizeButton_Click"
                                Opacity="0.85" Padding="0,0,0,4" >
                            <Button.Content>
                                <TextBlock Text="&#128470;&#xFE0E;" Margin="0,0,0,0" x:Name="MaximizeButtonText" Width="20" TextAlignment="Center" TextWrapping="Wrap"/>
                            </Button.Content>
                        </Button>
                        <Button Style="{StaticResource WindowButtonStyle}" Margin="0,0,0,0" 
                                FontSize="18" Height="27" Width="26" Click="CloseButton_Click"
                                Opacity="0.85" Padding="0,0,0,4">
                            <Button.Content>
                                <TextBlock Text="&#128473;&#xFE0E;" Margin="0,0,0,0" TextAlignment="Center" Width="20" TextWrapping="Wrap"/>
                            </Button.Content>
                        </Button>
                    </StackPanel>
                </Grid>
                <Grid Grid.Row="1" >
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="Auto" />
                        <ColumnDefinition Width="*" />
                        <ColumnDefinition Width="Auto" />
                    </Grid.ColumnDefinitions>
                    <StackPanel Orientation="Horizontal" Grid.Column="0">
                        <Label Content="Total Players:" Foreground="White" HorizontalAlignment="Left" Margin="-5,0,0,0"/>
                        <Label Content="{Binding SelectedTab.TotalPlayers}" Foreground="White" />
                        <Label Content="Total Servers:" Foreground="White"/>
                        <Label Content="{Binding SelectedTab.TotalServers}" Foreground="White" />
                    </StackPanel>
                    <StackPanel Grid.Column="1" VerticalAlignment="Center">
                        <TextBox TabIndex="1" Text="{Binding AdvancedServerFilter.FilterText, UpdateSourceTrigger=PropertyChanged}" FontSize="16" 
                                 TextChanged="TextBox_TextChanged" HorizontalAlignment="Stretch" Margin="10,0,10,0" 
                                 VerticalAlignment="Center"/>
                    </StackPanel>
                    <StackPanel Orientation="Horizontal" Grid.Column="2">
                        <Button TabIndex="3" Content="Filter" Width="80" Command="{Binding ShowServerFilterCommand}" />
                        <Separator Opacity="0" Width="5" />
                        <Button TabIndex="3" Content="Matchmaking" Width="80" Command="{Binding EnterMatchmakingCommand}" />
                        <Separator Opacity="0" Width="5" />
                        <Button TabIndex="3" Content="Join" Width="80" Command="{Binding SelectedTab.JoinServerCommand}" />
                        <Separator Opacity="0" Width="5" />
                        <Button TabIndex="4" Content="Refresh" Width="80" Command="{Binding RefreshServersCommand}"/>
                        <Separator Opacity="0" Width="5" />
                        <Button TabIndex="5" Content="Launch H2M" Width="80" Command="{Binding LaunchH2MCommand}"/>
                    </StackPanel>
                </Grid>
                <TabControl ItemsSource="{Binding ServerTabs}" SelectedItem="{Binding SelectedTab}" 
                            Grid.Row="2" Margin="0,10,0,5" BorderThickness="1" BorderBrush="DarkGray" Background="Transparent">
                    <TabControl.ItemTemplate>
                        <DataTemplate DataType="{x:Type vm:IServerTabViewModel}">
                            <TextBlock Text="{Binding TabName}"/>
                        </DataTemplate>
                    </TabControl.ItemTemplate>
                    <TabControl.ContentTemplate>
                        <DataTemplate DataType="{x:Type vm:IServerTabViewModel}">
                            <Grid>
                                <!-- Opaque background for the header row -->
                                <Rectangle VerticalAlignment="Top" Fill="Black" Opacity="0.9" Height="23" Margin="0, 0, 0, 5"></Rectangle>
                                <local:CustomDataGrid 
                                        x:Name="serverDataGrid" ItemsSource="{Binding ServerCollectionView}" 
                                        FontFamily="Consolas"
                                        Margin="-2,-2,-2,-2" Height="Auto" 
                                        KeyboardNavigation.TabNavigation="Once"
                                        TabIndex="2"
                                        CanUserReorderColumns="False" 
                                        CanUserAddRows="False" 
                                        CanUserDeleteRows="False" 
                                        CanUserSortColumns="True" 
                                        IsReadOnly="True"
                                        AutoGenerateColumns="False"
                                        GridLinesVisibility="None"
                                        SelectionUnit="FullRow"
                                        HorizontalScrollBarVisibility="Hidden"
                                        BorderThickness="0"
                                        Background="Black"
                                        Opacity="0.90"
                                        SelectionMode="Single"
                                        CanUserResizeColumns="true"
                                        HeadersVisibility="Column"
                                        VerticalScrollBarVisibility="Hidden"
                                        SelectedItem="{Binding SelectedServer, UpdateSourceTrigger=PropertyChanged}"
                                        RowBackground="Transparent">
                                    <DataGrid.Resources>
                                        <DataGridTextColumn 
                                            x:Key="ThatPeskyColumn"
                                            Header="Last played" 
                                            Visibility="{Binding Path=DataContext.IsRecentsSelected, Source={x:Reference mainWindow}, Converter={StaticResource booleanToVisibilityConverter}}" 
                                            SortMemberPath="SortPath"
                                            SortDirection="Descending"
                                            Binding="{Binding LastPlayed}"/>
                                    </DataGrid.Resources>

                                    <DataGrid.InputBindings>
                                        <!-- Key shortcut commands for row -->
                                        <KeyBinding Key="Return" Command="{Binding JoinServerCommand}" />
                                    </DataGrid.InputBindings>

                                    <DataGrid.ItemContainerStyle>
                                        <Style TargetType="DataGridRow">
                                            <!-- Enable focus and tab navigation for row -->
                                            <Setter Property="IsTabStop" Value="True"/>
                                            <Setter Property="Focusable" Value="True"/>
                                            <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
                                            <Setter Property="Opacity" Value="0.9"></Setter>

                                            <!-- Click handlers -->
                                            <EventSetter Event="MouseDoubleClick" Handler="DataGridRow_MouseDoubleClick"/>
                                            <EventSetter Event="MouseRightButtonDown" Handler="DataGridRow_MouseRightButtonDown"/>
                                            <EventSetter Event="GotFocus" Handler="DataGridRow_GotFocus"/>

                                            <Style.Triggers>
                                                <!-- Selection box -->
                                                <Trigger Property="IsSelected" Value="True">
                                                    <Setter Property="BorderBrush" Value="LawnGreen" />
                                                    <Setter Property="BorderThickness" Value="0 1" />
                                                    <Setter Property="Background" Value="#454545"></Setter>
                                                </Trigger>
                                            </Style.Triggers>
                                        </Style>
                                    </DataGrid.ItemContainerStyle>

                                    <DataGrid.Columns>
                                        <DataGridTemplateColumn Header="🔒" CanUserResize="False" SortMemberPath="IsPrivate">
                                            <DataGridTemplateColumn.CellTemplate>
                                                <DataTemplate>
                                                    <TextBlock Text="{Binding IsPrivate, Converter={StaticResource BooleanToPrivateStatusConverter}}" 
                                                           HorizontalAlignment="Center" VerticalAlignment="Center"/>
                                                </DataTemplate>
                                            </DataGridTemplateColumn.CellTemplate>
                                        </DataGridTemplateColumn>

                                        <DataGridTemplateColumn Header="Hostname" Width="5*" SortMemberPath="HostName">
                                            <DataGridTemplateColumn.CellTemplate>
                                                <DataTemplate DataType="vm:ServerViewModel">
                                                    <ItemsControl                            
                                                        Focusable="False"
                                                        IsTabStop="False" 
                                                        IsHitTestVisible="False" 
                                                        ItemsSource="{Binding HostName, Converter={StaticResource HostNameColorConverter}}" 
                                                        FlowDirection="LeftToRight">
                                                        <ItemsControl.ItemsPanel>
                                                            <ItemsPanelTemplate>
                                                                <StackPanel Orientation="Horizontal"/>
                                                            </ItemsPanelTemplate>
                                                        </ItemsControl.ItemsPanel>
                                                    </ItemsControl>
                                                </DataTemplate>
                                            </DataGridTemplateColumn.CellTemplate>
                                        </DataGridTemplateColumn>

                                        <StaticResource ResourceKey="ThatPeskyColumn"/>

                                        <DataGridTextColumn Header="Map" 
                                                        Binding="{Binding MapDisplayName}" 
                                                        MinWidth="100"
                                                        CanUserResize="False">
                                            <DataGridTextColumn.ElementStyle>
                                                <Style TargetType="TextBlock">
                                                    <Style.Triggers>
                                                        <DataTrigger Binding="{Binding HasMap}" Value="False">
                                                            <Setter Property="Foreground" Value="DarkRed" />
                                                        </DataTrigger>
                                                    </Style.Triggers>
                                                </Style>
                                            </DataGridTextColumn.ElementStyle>
                                        </DataGridTextColumn>
                                        <DataGridTextColumn Header="Mode" 
                                                        Binding="{Binding GameTypeDisplayName}" 
                                                        MinWidth="110"
                                                        CanUserResize="False"/>

                                        <DataGridTextColumn Header="Players" 
                                                        SortMemberPath="ClientNum"
                                                        MinWidth="65"
                                                        Binding="{Binding Occupation}"
                                                        CanUserResize="False"
                                                        Width="80">
                                            <DataGridTextColumn.ElementStyle>
                                                <Style TargetType="TextBlock">
                                                    <Setter Property="HorizontalAlignment" Value="Right" />
                                                </Style>
                                            </DataGridTextColumn.ElementStyle>
                                        </DataGridTextColumn>

                                        <!-- Updated Favorite Column with Clickable Feature -->
                                        <DataGridTemplateColumn Header="Favourite" MinWidth="69" SortMemberPath="IsFavorite" CanUserResize="False">
                                            <DataGridTemplateColumn.CellTemplate>
                                                <DataTemplate>
                                                    <Button Content="{Binding IsFavorite, Converter={StaticResource BooleanToStarConverter}}"
                                                        Command="{Binding DataContext.ToggleFavouriteCommand, RelativeSource={RelativeSource AncestorType=DataGrid}}"
                                                        CommandParameter="{Binding}"
                                                        HorizontalAlignment="Center" 
                                                        VerticalAlignment="Center"
                                                        FontSize="16"
                                                        Background="Transparent"
                                                        BorderThickness="0"
                                                        Margin="5,0,0,0"
                                                        Cursor="Hand"/>
                                                </DataTemplate>
                                            </DataGridTemplateColumn.CellTemplate>
                                        </DataGridTemplateColumn>

                                        <DataGridTextColumn Header="Ping" Binding="{Binding Ping}" CanUserResize="False" Width="40">
                                            <DataGridTextColumn.ElementStyle>
                                                <Style TargetType="TextBlock">
                                                    <Setter Property="HorizontalAlignment" Value="Right" />
                                                    <Setter Property="FontFamily" Value="Consolas" />
                                                    <Setter Property="Margin" Value="0,0,4,0"/>
                                                    <Setter Property="Foreground" Value="{Binding Ping, Converter={StaticResource PingColorConverter}}" />
                                                </Style>
                                            </DataGridTextColumn.ElementStyle>
                                        </DataGridTextColumn>
                                    </DataGrid.Columns>
                                </local:CustomDataGrid>
                            </Grid>
                        </DataTemplate>
                    </TabControl.ContentTemplate>
                </TabControl>

                <StatusBar Grid.Row="3" Background="Transparent" Foreground="#eee">
                    <StatusBar.ItemsPanel>
                        <ItemsPanelTemplate>
                            <Grid>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="*" />
                                    <ColumnDefinition Width="Auto" />
                                    <ColumnDefinition Width="Auto" />
                                    <ColumnDefinition Width="Auto" />
                                    <ColumnDefinition Width="Auto" />
                                </Grid.ColumnDefinitions>
                            </Grid>
                        </ItemsPanelTemplate>
                    </StatusBar.ItemsPanel>
                    <StatusBarItem Content="{Binding StatusText}" Grid.Column="0" VerticalContentAlignment="Center" />
                    <StatusBarItem Content="{Binding GameState.ConnectionText}" Grid.Column="1" VerticalContentAlignment="Center">
                        <!--<StatusBarItem.Style>
                            <Style TargetType="StatusBarItem">
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding GameState.IsConnected}" Value="True">
                                        <Setter Property="Foreground" Value="LimeGreen"/>
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </StatusBarItem.Style>-->
                    </StatusBarItem>
                    <Separator Width="1" Height="16" Grid.Column="2">
                        <Separator.Style>
                            <Style TargetType="Separator">
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding GameState.ConnectionText}" Value="">
                                        <Setter Property="Visibility" Value="Hidden"/>
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </Separator.Style>
                    </Separator>
                    <StatusBarItem Content="{Binding GameState}" HorizontalAlignment="Right" Grid.Column="3" VerticalContentAlignment="Center">
                        <StatusBarItem.ContentTemplate>
                            <DataTemplate DataType="{x:Type vm:GameStateViewModel}">
                                <TextBlock x:Name="ConnectionString" Height="Auto" 
                                           Text="{Binding DisplayText}" VerticalAlignment="Center" />
                                <DataTemplate.Triggers>
                                    <DataTrigger Binding="{Binding IsGameRunning}" Value="true">
                                        <Setter TargetName="ConnectionString" Property="Foreground" Value="LimeGreen"/>
                                    </DataTrigger>
                                    <DataTrigger Binding="{Binding IsGameRunning}" Value="false">
                                        <Setter TargetName="ConnectionString" Property="Foreground" Value="DarkRed"/>
                                    </DataTrigger>
                                </DataTemplate.Triggers>
                            </DataTemplate>
                        </StatusBarItem.ContentTemplate>
                    </StatusBarItem>
                    <StatusBarItem HorizontalAlignment="Right" Grid.Column="4" VerticalContentAlignment="Center">
                        <Button Style="{StaticResource LinkButtonStyle}"  Command="{Binding ShowSettingsCommand}">
                            <TextBlock Text="⚙" Padding="0,0,0,1.5" Margin="1" FontSize="14"/>
                        </Button>
                    </StatusBarItem>
                </StatusBar>
            </Grid>
        </Border>
    </Grid>
</Window>
