<UserControl x:Class="H2MLauncher.UI.View.Controls.RecentPlayersControl"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:ui="clr-namespace:H2MLauncher.UI"
             xmlns:local="clr-namespace:H2MLauncher.UI.View.Controls"
             xmlns:converters="clr-namespace:H2MLauncher.UI.Converters"
             xmlns:vm="clr-namespace:H2MLauncher.UI.ViewModels"
             xmlns:i="http://schemas.microsoft.com/xaml/behaviors"
             Style="{DynamicResource SocialControlStyle}"
             mc:Ignorable="d" d:Background="#242"
             d:DataContext="{d:DesignInstance Type=vm:RecentPlayersViewModel}"
             d:DesignHeight="450" d:DesignWidth="250">
    <UserControl.Resources>
    </UserControl.Resources>
    <Grid Grid.Row="1" x:Name="RecentPlayersPanel" Margin="6" TextBlock.Foreground="{DynamicResource TextLight}" VerticalAlignment="Stretch"
          TextBlock.FontFamily="Consolas">
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="*"/>
        </Grid.RowDefinitions>

        <!-- No recent players -->
        <Border Visibility="{Binding HasPlayers, Converter={StaticResource InverseBoolToVisibilityConverter}}" 
                BorderBrush="{DynamicResource ControlBorderBrushNeutral}" Background="{DynamicResource TransparentDark500}" VerticalAlignment="Stretch" Margin="0,5" Grid.Row="1">
            <TextBlock Margin="0,5" Padding="0,5" Text="No recent players encountered." HorizontalAlignment="Center"/>
        </Border>

        <ScrollViewer Grid.Row="1" VerticalScrollBarVisibility="Hidden">

            <!-- Recent players list -->
            <ItemsControl x:Name="RecentPlayersItemsControl"
                          ItemsSource="{Binding Players, UpdateSourceTrigger=PropertyChanged}" 
                          Margin="0,5" 
                          Padding="0,5" 
                          Background="{DynamicResource TransparentDark400}"
                          BorderBrush="{DynamicResource ControlBorderBrushNeutral}" 
                          Visibility="{Binding HasPlayers, Converter={StaticResource booleanToVisibilityConverter}}"
                          KeyboardNavigation.DirectionalNavigation="Contained" 
                          VerticalAlignment="Top">
                <ItemsControl.ItemTemplate>
                    <DataTemplate>
                        <ToggleButton x:Name="itemButton" Padding="7,5,5,5" Margin="10,0" Style="{StaticResource TransparentItemToggleButton}">
                            <!-- Deselect item when popup closes -->
                            <i:Interaction.Triggers>
                                <i:EventTrigger EventName="Closed">
                                    <i:ChangePropertyAction TargetObject="{Binding RelativeSource={RelativeSource AncestorType=ToggleButton}}"
                                                            PropertyName="IsChecked" Value="False" />
                                </i:EventTrigger>
                            </i:Interaction.Triggers>

                            <Grid Height="65">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="*"/>
                                    <ColumnDefinition Width="Auto"/>
                                </Grid.ColumnDefinitions>
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="Auto"/>
                                    <RowDefinition Height="*"/>
                                    <RowDefinition Height="Auto"/>
                                </Grid.RowDefinitions>

                                <!-- Player name -->
                                <TextBlock Foreground="{DynamicResource TextLight}" FontSize="13"
                                           VerticalAlignment="Center" Margin="0,0,0,0">
                                    <TextBlock.Style>
                                        <Style TargetType="TextBlock">
                                            <Setter Property="FontWeight" Value="SemiBold"/>
                                            <Setter Property="ui:TextBlockExtensions.BindableInlines" Value="{Binding Name, Converter={StaticResource HostNameColorConverter}}"/>
                                        </Style>
                                    </TextBlock.Style>
                                </TextBlock>

                                <!-- User name -->
                                <TextBlock Text="{Binding UserName, StringFormat={}@{0}}" Grid.Row="1"  
                                           Foreground="{DynamicResource BrushNeutral300}" FontSize="10" FontWeight="SemiBold"
                                           VerticalAlignment="Top" Margin="0,2,0,2" >
                                </TextBlock>

                                <!-- Encountered At -->
                                <TextBlock Text="{Binding EncounteredAt, Converter={StaticResource HumanizeDateConverter}}" 
                                           ToolTip="{Binding EncounteredAt, StringFormat=g}"
                                           FontSize="11"  Foreground="{DynamicResource BrushNeutral100}"
                                           HorizontalAlignment="Center" Grid.Column="1"
                                           Grid.Row="0" Margin="0,0,0,0" 
                                           VerticalAlignment="Center">
                                </TextBlock>

                                <!-- Server -->
                                <Grid HorizontalAlignment="Stretch" Grid.Row="2" Grid.ColumnSpan="2">
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="*"/>
                                        <ColumnDefinition Width="Auto"/>
                                    </Grid.ColumnDefinitions>
                                    <Button Grid.Row="2" Background="{DynamicResource TransparentDark400}" 
                                            VerticalAlignment="Bottom" Padding="5" HorizontalContentAlignment="Left"
                                            Margin="0,0,3,2"  Style="{StaticResource LinkButtonStyle}"
                                            Command="{Binding SelectServerCommand}">

                                        <!-- Server name -->
                                        <TextBlock FontSize="10" TextWrapping="NoWrap" TextTrimming="CharacterEllipsis"
                                                   HorizontalAlignment="Left" Grid.Column="0" ToolTip="{Binding ServerName}"
                                                   Grid.Row="2" ui:TextBlockExtensions.BindableInlines="{Binding ServerName, Converter={StaticResource HostNameColorConverter}}"
                                                   VerticalAlignment="Center">
                                        </TextBlock>
                                    </Button>
                                </Grid>

                                <!-- Details Popup -->
                                <Popup x:Name="DetailsPopup"
                                       IsOpen="{Binding RelativeSource={RelativeSource AncestorType=ToggleButton}, Path=IsChecked}"
                                       AllowsTransparency="True"
                                       PlacementTarget="{Binding ElementName=itemButton}"
                                       Placement="Left"
                                       PlacementRectangle="-10,0,0,0"
                                       HorizontalOffset="5" 
                                       VerticalOffset="0"
                                       StaysOpen="False" 
                                       PopupAnimation="Fade"
                                       Opened="DetailsPopup_Opened"
                                       MouseDown="DetailsPopup_MouseDown"
                                       Width="250">
                                    <Popup.Resources>
                                        <Style TargetType="TextBlock">
                                            <Setter Property="Foreground" Value="{DynamicResource TextLight}"/>
                                        </Style>
                                    </Popup.Resources>
                                    <Border Style="{DynamicResource DetailsPopupBorderStyle}" Focusable="True"
                                            CornerRadius="7" Opacity="1">
                                        <StackPanel Margin="12">
                                            <TextBlock Text="{Binding Name}" FontSize="18" FontWeight="Bold"/>
                                            <StackPanel Orientation="Horizontal" Margin="0,3,0,0">
                                                <TextBox Text="{Binding UserName, StringFormat={}@{0}}" IsReadOnly="True">
                                                    <i:Interaction.Triggers>
                                                        <i:EventTrigger EventName="MouseDoubleClick">
                                                            <i:EventTrigger.Actions>
                                                                <i:InvokeCommandAction Command="{Binding CopyUserNameCommand}"/>
                                                            </i:EventTrigger.Actions>
                                                        </i:EventTrigger>
                                                    </i:Interaction.Triggers>
                                                    <TextBox.Style>
                                                        <Style TargetType="TextBox">
                                                            <Setter Property="Foreground" Value="{DynamicResource TextLight}"/>
                                                            <Setter Property="Background" Value="Transparent"/>
                                                            <Setter Property="BorderThickness" Value="0"/>
                                                        </Style>
                                                    </TextBox.Style>
                                                </TextBox>
                                            </StackPanel>

                                            <!-- Last met -->
                                            <TextBlock Margin="0,8,0,0" FontSize="10" Foreground="{DynamicResource BrushNeutral200}"
                                                Text="{Binding EncounteredAt, StringFormat='{}Last met: {0:g} on'}"/>

                                            <!-- Met on Server -->
                                            <Border Padding="7" CornerRadius="5" Background="{DynamicResource TransparentLight200}" Margin="0,5">
                                                <TextBlock Margin="0,0,0,0" FontSize="10" Foreground="{DynamicResource BrushNeutral200}" TextWrapping="Wrap"
                                                            ui:TextBlockExtensions.BindableInlines="{Binding ServerName, Converter={StaticResource HostNameColorConverter}}"/>
                                            </Border>

                                            <Separator Margin="0,5"/>

                                            <!-- Invites disabled as there is currently no way to display them for strangers -->
                                            <!--<Button Content="Invite to Party" Command="{Binding InviteToPartyCommand}" Visibility="{Binding CanInvite, Converter={StaticResource booleanToVisibilityConverter}}"
                                                        Padding="5" Margin="0,5"/>-->

                                            <Button Content="Send Friend Request" Command="{Binding AddFriendCommand}" Visibility="{Binding CanAddFriend, Converter={StaticResource booleanToVisibilityConverter}}"
                                                        Padding="5" Margin="0,5">
                                                <Button.Style>
                                                    <Style TargetType="Button" BasedOn="{StaticResource {x:Type Button}}">
                                                        <Setter Property="Content" Value="Send Friend Request}"/>
                                                        <Setter Property="ToolTip" Value="Send the user a friend request"/>
                                                        <Style.Triggers>
                                                            <DataTrigger Binding="{Binding HasRequested}" Value="True">
                                                                <Setter Property="Content" Value="Friend request sent"/>
                                                                <Setter Property="ToolTip" Value="Waiting for the user to accept the friend request"/>
                                                            </DataTrigger>
                                                            <DataTrigger Binding="{Binding AddFriendCommand.IsRunning}" Value="True">
                                                                <Setter Property="Content" Value="Sending Friend Request..."/>
                                                            </DataTrigger>
                                                        </Style.Triggers>
                                                    </Style>
                                                </Button.Style>
                                            </Button>
                                            <Separator Margin="0,5" />
                                            <Button Content="Copy User ID" Command="{Binding CopyUserIdCommand}" 
                                                    Padding="5" Margin="0,5,0,0" />
                                        </StackPanel>
                                    </Border>
                                </Popup>
                            </Grid>
                        </ToggleButton>
                    </DataTemplate>
                </ItemsControl.ItemTemplate>
            </ItemsControl>
        </ScrollViewer>
    </Grid>
</UserControl>
