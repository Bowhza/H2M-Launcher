<UserControl x:Class="H2MLauncher.UI.Dialog.Views.QueueDialogView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:local="clr-namespace:H2MLauncher.UI.Dialog.Views"
             mc:Ignorable="d" 
             xmlns:vm="clr-namespace:H2MLauncher.UI.ViewModels" 
             xmlns:controls="clr-namespace:H2MLauncher.UI.View.Controls" 
             xmlns:i="http://schemas.microsoft.com/xaml/behaviors"
             MinHeight="200" MinWidth="300"
             Height="Auto"
             Width="400"
             d:DataContext="{d:DesignInstance Type=vm:QueueViewModel}">
    <UserControl.Resources>
        <Style TargetType="{ x:Type ToggleButton}" BasedOn="{StaticResource {x:Type ToggleButton}}" x:Key="YesNoToggleButtonStyle">
            <Style.Triggers>
                <Trigger Property="IsChecked" Value="True">
                    <Setter Property="Content" Value="Yes"/>
                </Trigger>
                <Trigger Property="IsChecked" Value="False">
                    <Setter Property="Content" Value="No"/>
                </Trigger>
            </Style.Triggers>
        </Style>

        <Style TargetType="{x:Type TextBox}">
            <Style.Setters>
                <Setter Property="Foreground" Value="White"/>
                <Setter Property="Background" Value="#33000000"/>
                <Setter Property="CaretBrush" Value="White"/>
            </Style.Setters>
        </Style>

        <Style TargetType="ToolTip">
            <Style.Resources>
                <Style TargetType="ContentPresenter">
                    <Style.Resources>
                        <Style TargetType="TextBlock">
                            <Setter Property="TextWrapping" Value="Wrap" />
                        </Style>
                    </Style.Resources>
                </Style>
            </Style.Resources>
            <Setter Property="MaxWidth" Value="400" />
        </Style>

    </UserControl.Resources>
    <Grid Margin="25,15,25,0">
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="*"/>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="Auto"/>
        </Grid.RowDefinitions>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="Auto"/>
            <ColumnDefinition/>
        </Grid.ColumnDefinitions>
        <TextBlock Grid.Row="0" Text="Game Queue" TextWrapping="WrapWithOverflow" 
                   TextAlignment="Center" FontWeight="Bold" FontSize="15" Height="25" Grid.ColumnSpan="2"
                   Margin="0,0,0,15"/>

        <Canvas x:Name="serverTextContainer" Grid.Row="1" Grid.ColumnSpan="2" Width="300" Margin="15,5" 
                HorizontalAlignment="Center" ClipToBounds="True" Height="25">
            <TextBlock x:Name="serverName" SizeChanged="ServerNameTextBox_SizeChanged" Canvas.Left="0" 
                       TextWrapping="NoWrap" HorizontalAlignment="Center">
                <TextBlock.Inlines>
                    <ItemsControl ItemsSource="{Binding Server.HostName, Converter={StaticResource HostNameColorConverter}}">
                        <ItemsControl.ItemsPanel>
                            <ItemsPanelTemplate>
                                <StackPanel Orientation="Horizontal" />
                            </ItemsPanelTemplate>
                        </ItemsControl.ItemsPanel>
                    </ItemsControl>
                </TextBlock.Inlines>
                <TextBlock.RenderTransform>
                    <TranslateTransform X="0"/>
                </TextBlock.RenderTransform>
            </TextBlock>
        </Canvas>
        <StackPanel Orientation="Vertical" Grid.Row="2" Grid.ColumnSpan="2" 
                    Visibility="{Binding IsJoining, Converter={StaticResource invertableBooleanToVisibilityConverter}, ConverterParameter=Inverted}">
            <TextBlock Text="You have been placed in the queue."
                   Grid.Row="2" Grid.ColumnSpan="2" Margin="15,5" HorizontalAlignment="Center"
                   TextWrapping="WrapWithOverflow" TextAlignment="Center"/>
            <TextBlock Text="{Binding QueuePositionText,StringFormat={}Position: {0}}" Grid.Row="3" Grid.ColumnSpan="2" FontWeight="Bold" HorizontalAlignment="Center"/>

            <TextBlock Text="{Binding QueueTime,StringFormat={}{0:mm}:{0:ss}}" Grid.Row="6" Grid.ColumnSpan="2" Margin="10" 
                   HorizontalAlignment="Center"/>
        </StackPanel>

        <StackPanel Orientation="Vertical" Grid.Row="2" Grid.ColumnSpan="2" 
                    Visibility="{Binding IsJoining, Converter={StaticResource booleanToVisibilityConverter}}">
            <TextBlock Text="Connecting to server" FontWeight="Bold" HorizontalAlignment="Center"/>
            <TextBlock Text="{Binding JoiningServer}"  HorizontalAlignment="Center"/>
        </StackPanel>

            <Grid Grid.Row="7" Grid.ColumnSpan="2" Margin="0,10,0,15">
            <Grid.ColumnDefinitions>
                <ColumnDefinition/>
                <ColumnDefinition/>
            </Grid.ColumnDefinitions>
            <Button Content="Leave Queue" Height="25" Command="{Binding LeaveQueueCommand}" Grid.Column="0" IsCancel="True" Margin="0,0,5,0"/>
            <Button Content="Force Join" Height="25" Command="{Binding ForceJoinCommand}" IsDefault="True" Grid.Column="1" Margin="5,0,0,0"/>
        </Grid>
    </Grid>
</UserControl>
