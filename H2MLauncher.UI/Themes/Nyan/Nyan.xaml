<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
					xmlns:system="clr-namespace:System;assembly=mscorlib"
					xmlns:view="clr-namespace:H2MLauncher.UI.View;assembly=H2MLauncher.UI"
					xmlns:vm="clr-namespace:H2MLauncher.UI.ViewModels;assembly=H2MLauncher.UI" 
					xmlns:gif="clr-namespace:XamlAnimatedGif;assembly=XamlAnimatedGif" 
					xmlns:controls="clr-namespace:H2MLauncher.UI.View.Controls;assembly=H2MLauncher.UI">

    <!-- Contrast Colors -->
	<Color x:Key="ColorLight">White</Color>
	<Color x:Key="ColorBlack">Black</Color>

	<!-- Neutral Color Palette -->
	<Color x:Key="ColorNeutral50">#f4f5f4</Color>
	<Color x:Key="ColorNeutral100">#dfe0df</Color>
	<Color x:Key="ColorNeutral250">#c9cbc9</Color>
	<Color x:Key="ColorNeutral200">#b3b6b3</Color>
	<Color x:Key="ColorNeutral300">#9ea19e</Color>
	<Color x:Key="ColorNeutral400">#888c88</Color>
	<Color x:Key="ColorNeutral500">#737773</Color>
	<Color x:Key="ColorNeutral600">#5e615e</Color>
	<Color x:Key="ColorNeutral700">#494c49</Color>
	<Color x:Key="ColorNeutral800">#343634</Color>
	<Color x:Key="ColorNeutral900">#1f201f</Color>
	<Color x:Key="ColorNeutral950">#0a0b0a</Color>

	<!-- Primary Color Palette -->
	<Color x:Key="ColorPrimary100">#fdc3ee</Color>
	<Color x:Key="ColorPrimary200">#fcb9eb</Color>
	<Color x:Key="ColorPrimary300">#fcafe9</Color>
	<Color x:Key="ColorPrimary400">#fba5e6</Color>
	<Color x:Key="ColorPrimary500">#FF99FF</Color>
	<Color x:Key="ColorPrimary600">#e28ccc</Color>
	<Color x:Key="ColorPrimary700">#c97cb6</Color>
	<Color x:Key="ColorPrimary800">#b06d9f</Color>
	<Color x:Key="ColorPrimary900">#975d88</Color>
	<Color x:Key="ColorPrimary950">#7e4e72</Color>

	<!-- Secondary Color Palette -->
	<Color x:Key="ColorSecondary100">#c9ffc4</Color>
	<Color x:Key="ColorSecondary200">#98ff90</Color>
	<Color x:Key="ColorSecondary300">#56ff50</Color>
	<Color x:Key="ColorSecondary400">#00ff00</Color>
    <Color x:Key="ColorSecondary500">LimeGreen</Color>
	<Color x:Key="ColorSecondary600">#32CD32</Color>
	<Color x:Key="ColorSecondary700">#008b07</Color>
	<Color x:Key="ColorSecondary800">#008b07</Color>
	<Color x:Key="ColorSecondary900">#008b07</Color>
	<Color x:Key="ColorSecondary950">#003406</Color>

	<Color x:Key="NyanBeige">#ffcc99</Color>
	<Color x:Key="NyanDarkPink">#FF3399</Color>
	<Color x:Key="NyanGray">#999</Color>

	<SolidColorBrush x:Key="NyanBeigeBrush" Color="{DynamicResource NyanBeige}"/>
    <SolidColorBrush x:Key="NyanDarkPinkBrush" Color="{DynamicResource NyanDarkPink}"/>
	<SolidColorBrush x:Key="NyanGrayBrush" Color="{DynamicResource NyanGray}"/>

	<LinearGradientBrush x:Key="RainbowBrush" StartPoint="0,0.5" EndPoint="1,0.5">
      <GradientStop Color="Red" Offset="0.0" />
	  <GradientStop Color="Orange" Offset="0.33" />
      <GradientStop Color="Yellow" Offset="0.5" />
      <GradientStop Color="LimeGreen" Offset="0.66" />
      <GradientStop Color="Blue" Offset="0.88" />
	  <GradientStop Color="Purple" Offset="1.0" />
    </LinearGradientBrush>

	<!-- <LinearGradientBrush x:Key="TextBoxForegroundDark" StartPoint="0,0" EndPoint="1,1">
      <GradientStop Color="Red" Offset="0.0" />
	  <GradientStop Color="Orange" Offset="0.33" />
      <GradientStop Color="Yellow" Offset="0.5" />
      <GradientStop Color="LimeGreen" Offset="0.66" />
      <GradientStop Color="Blue" Offset="0.88" />
	  <GradientStop Color="Purple" Offset="1.0" />
    </LinearGradientBrush> -->

	<Style TargetType="ProgressBar">
		<Setter Property="Foreground" Value="{DynamicResource RainbowBrush}"/>
	</Style>

	<!-- Brushes -->
	<SolidColorBrush x:Key="TextDark" Color="{DynamicResource ColorBlack}" />
	<SolidColorBrush x:Key="TextLight" Color="{DynamicResource ColorLight}" />
	<SolidColorBrush x:Key="TextHint" Color="{DynamicResource ColorNeutral300}" />

	<SolidColorBrush x:Key="ControlBackground" Color="{DynamicResource ColorNeutral700}" />
	<SolidColorBrush x:Key="ControlBackgroundDisabled" Color="{DynamicResource ColorNeutral600}" />
	<SolidColorBrush x:Key="ControlForegroundDisabled" Color="{DynamicResource ColorNeutral200}" />
	<SolidColorBrush x:Key="ControlBorderBrush" Color="{DynamicResource NyanBeige}" />
	<SolidColorBrush x:Key="ControlBorderBrushNeutral" Color="{DynamicResource ColorNeutral600}" />

	<!-- Primary Brushes -->
	<SolidColorBrush x:Key="ControlPrimary" Color="{DynamicResource ColorPrimary500}" />
	<SolidColorBrush x:Key="ControlPrimaryHover" Color="{DynamicResource ColorPrimary400}" />
	<SolidColorBrush x:Key="ControlPrimarySelected" Color="{DynamicResource ColorPrimary500}" />
	<SolidColorBrush x:Key="ControlPrimaryPressed" Color="{DynamicResource ColorPrimary600}" />
    <SolidColorBrush x:Key="ControlPrimaryForeground" Color="{DynamicResource NyanDarkPink}" />
	<SolidColorBrush x:Key="BrushPrimary300" Color="{DynamicResource ColorPrimary300}" />
	<SolidColorBrush x:Key="BrushPrimary900" Color="{DynamicResource ColorPrimary900}" />


	<SolidColorBrush x:Key="DialogBackground" Color="{DynamicResource ColorNeutral800}" />
	<SolidColorBrush x:Key="DialogBorderBrush" Color="{DynamicResource NyanBeige}" />

	<SolidColorBrush x:Key="BrushSecondary" Color="{DynamicResource NyanBeige}"/>

	<!-- Neutral Brushes -->
	<SolidColorBrush x:Key="BrushNeutral" Color="{DynamicResource ColorNeutral400}"/>
	<SolidColorBrush x:Key="BrushNeutralLight" Color="{DynamicResource ColorNeutral250}"/>
	<SolidColorBrush x:Key="BrushNeutralDark" Color="{DynamicResource ColorNeutral700}"/>
	<SolidColorBrush x:Key="BrushNeutral100" Color="{DynamicResource ColorNeutral100}"/>
	<SolidColorBrush x:Key="BrushNeutral200" Color="{DynamicResource ColorNeutral200}"/>
	<SolidColorBrush x:Key="BrushNeutral250" Color="{DynamicResource ColorNeutral250}"/>
	<SolidColorBrush x:Key="BrushNeutral300" Color="{DynamicResource ColorNeutral300}"/>
	<SolidColorBrush x:Key="BrushNeutral400" Color="{DynamicResource ColorNeutral400}"/>
	<SolidColorBrush x:Key="BrushNeutral500" Color="{DynamicResource ColorNeutral500}"/>
	<SolidColorBrush x:Key="BrushNeutral600" Color="{DynamicResource ColorNeutral600}"/>
	<SolidColorBrush x:Key="BrushNeutral700" Color="{DynamicResource ColorNeutral700}"/>
	<SolidColorBrush x:Key="BrushNeutral800" Color="{DynamicResource ColorNeutral800}"/>
	<SolidColorBrush x:Key="BrushNeutral900" Color="{DynamicResource ColorNeutral900}"/>
	<SolidColorBrush x:Key="BrushNeutral950" Color="{DynamicResource ColorNeutral950}"/>

	<!-- TextBox Brushes -->
	<SolidColorBrush x:Key="TextBoxBackgroundDark" Color="{DynamicResource ColorBlack}" Opacity="0.2"/>
	<SolidColorBrush x:Key="TextBoxForegroundDark" Color="{DynamicResource ColorLight}"/>
	<SolidColorBrush x:Key="TextBoxBorderBrush" Color="{DynamicResource ColorNeutral400}"/>

	<!-- Transparent Item Brushes -->
	<SolidColorBrush x:Key="ItemTransparentHover" Color="{DynamicResource ColorLight}" Opacity="0.07"/>
	<SolidColorBrush x:Key="ItemTransparentPressed" Color="{DynamicResource ColorLight}" Opacity="0.13"/>
	<SolidColorBrush x:Key="ItemTransparentChecked" Color="{DynamicResource ColorLight}" Opacity="0.3"/>

	<!-- Transparent Dark Brushes -->
	<SolidColorBrush x:Key="TransparentDark200" Color="{DynamicResource ColorBlack}" Opacity="0.2"/>
	<SolidColorBrush x:Key="TransparentDark300" Color="{DynamicResource ColorBlack}" Opacity="0.3"/>
	<SolidColorBrush x:Key="TransparentDark400" Color="{DynamicResource ColorBlack}" Opacity="0.4"/>
	<SolidColorBrush x:Key="TransparentDark500" Color="{DynamicResource ColorBlack}" Opacity="0.5"/>

	<!-- Transparent White Brushes -->
	<SolidColorBrush x:Key="TransparentLight100" Color="{DynamicResource ColorLight}" Opacity="0.1"/>
	<SolidColorBrush x:Key="TransparentLight200" Color="{DynamicResource ColorLight}" Opacity="0.2"/>
	<SolidColorBrush x:Key="TransparentLight300" Color="{DynamicResource ColorLight}" Opacity="0.3"/>
	<SolidColorBrush x:Key="TransparentLight400" Color="{DynamicResource ColorLight}" Opacity="0.4"/>
	<SolidColorBrush x:Key="TransparentLight500" Color="{DynamicResource ColorLight}" Opacity="0.5"/>


	<!-- Default style for all controls -->
	<Style TargetType="{x:Type Control}">
		<Setter Property="BorderBrush" Value="{DynamicResource ControlBorderBrush}"/>
		<Setter Property="Foreground" Value="{DynamicResource TextLight}"/>
	</Style>

	<Style TargetType="{x:Type TextBox}">
		<Setter Property="Foreground" Value="{DynamicResource RainbowBrush}"/>
	</Style>

	<!-- Dark TextBox used in dialogs on dark background -->
	<Style x:Key="TransparentDarkTextBoxStyle" TargetType="{x:Type TextBox}">
		<Style.Setters>
			<Setter Property="Foreground" Value="{DynamicResource RainbowBrush}"/>
			<Setter Property="Background" Value="{DynamicResource TextBoxBackgroundDark}"/>
			<Setter Property="CaretBrush" Value="{DynamicResource TextLight}"/>
		</Style.Setters>
	</Style>
	 
	<SolidColorBrush x:Key="ServerDataGridHeaderBackground" Color="{DynamicResource ColorBlack}" Opacity="0.9"/>
	
	<ImageSource x:Key="BackgroundImageSource">back.jpg</ImageSource>
	
	<!-- Main Window -->
	<Style x:Key="BackgroundImageContainerStyle" TargetType="Border">
		<!-- Hide this container to hide the background image and expose the background brush -->
		<Setter Property="Visibility" Value="Visible"/>
		<Setter Property="Opacity" Value="1"/>
	</Style>
	
	<!-- Background controls (put any elements or media here) -->
	<DataTemplate x:Key="BackgroundControlTemplate" DataType="{x:Type vm:ServerBrowserViewModel}">
		<Grid>
			<Image gif:AnimationBehavior.SourceUri="nyan-cat-cat.gif" Width="100" HorizontalAlignment="Right" VerticalAlignment="Top" Margin="300,-20,321,46"
				   gif:AnimationBehavior.RepeatBehavior="Forever" />
				   
			<Image gif:AnimationBehavior.SourceUri="nian-cat.gif" Width="100" HorizontalAlignment="Right" VerticalAlignment="Bottom" Margin="300,-20,120,96"
				   gif:AnimationBehavior.RepeatBehavior="Forever" />
		</Grid>
	</DataTemplate>

	<Style TargetType="{x:Type Button}">
		<Setter Property="Background" Value="{DynamicResource NyanGrayBrush}" />
		<Setter Property="Foreground" Value="{DynamicResource TextDark}" />
		<Setter Property="SnapsToDevicePixels" Value="True" />
		<Setter Property="Padding" Value="0" />
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type Button}">
					<Border CornerRadius="4" x:Name="border"
							Background="{TemplateBinding Background}"
							Padding="{TemplateBinding Padding}"
							BorderThickness="1" RenderOptions.EdgeMode="Aliased"
							BorderBrush="{DynamicResource TextDark}">
						<Grid>
							<ContentPresenter x:Name="MyContentPresenter" Content="{TemplateBinding Content}"
											HorizontalAlignment="Center" VerticalAlignment="Center" Margin="0,0,0,0" />
						</Grid>
					</Border>
					<ControlTemplate.Triggers>
						<Trigger Property="IsMouseOver" Value="True">
							<Setter TargetName="border" Property="Background" Value="{DynamicResource ControlPrimaryHover}" />
							<Setter Property="Foreground" Value="{DynamicResource TextDark}" />
						</Trigger>

						<Trigger Property="IsPressed" Value="True">
							<Setter TargetName="border" Property="Background" Value="{DynamicResource ControlPrimaryPressed}" />
							<Setter Property="Foreground" Value="{DynamicResource TextDark}" />
						</Trigger>

						<Trigger Property="IsFocused" Value="True">
							<Setter Property="Foreground" Value="{DynamicResource NyanBeigeBrush}" />
						</Trigger>
						<Trigger Property="IsFocused" Value="False">
                            <Setter Property="Foreground" Value="{DynamicResource TextDark}" />
						</Trigger>

						<Trigger Property="IsEnabled" Value="False">
							<Setter TargetName="border" Property="Background" Value="{DynamicResource ControlBackgroundDisabled}" />
							<Setter TargetName="border" Property="Opacity" Value="0.7" />
							<Setter Property="Foreground" Value="{DynamicResource ControlForegroundDisabled}" />
						</Trigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

	<Style TargetType="{x:Type ToggleButton}">
		<Setter Property="Background" Value="{DynamicResource NyanGrayBrush}" />
		<Setter Property="Foreground" Value="{DynamicResource TextLight}" />
		<Setter Property="SnapsToDevicePixels" Value="True" />
		<Setter Property="VerticalContentAlignment" Value="Center" />
		<Setter Property="BorderBrush" Value="Transparent" />
		<Setter Property="BorderThickness" Value="0" />
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type ToggleButton}">
					<Border CornerRadius="4" Background="{TemplateBinding Background}"
							BorderBrush="{TemplateBinding BorderBrush}"
							BorderThickness="{TemplateBinding BorderThickness}">
						<Grid>
							<ContentPresenter Content="{TemplateBinding Content}"
											HorizontalAlignment="Center" VerticalAlignment="Center" Margin="0,0,0,0" />
						</Grid>
					</Border>
					<ControlTemplate.Triggers>
						<Trigger Property="IsMouseOver" Value="True">
							<Setter Property="Background" Value="{DynamicResource ControlPrimaryHover}" />
							<Setter Property="Foreground" Value="{DynamicResource TextLight}" />
						</Trigger>

						<Trigger Property="IsPressed" Value="True">
							<Setter Property="Background" Value="{DynamicResource ControlPrimaryPressed}" />
							<Setter Property="Foreground" Value="{DynamicResource TextLight}" />
						</Trigger>

						<Trigger Property="IsFocused" Value="True">
							<Setter Property="Foreground" Value="{DynamicResource NyanBeigeBrush}" />
						</Trigger>
						<Trigger Property="IsFocused" Value="False">
							<Setter Property="Foreground" Value="{DynamicResource TextLight}" />
						</Trigger>

						<Trigger Property="IsChecked" Value="True">
							<Setter Property="Foreground" Value="{DynamicResource ControlPrimaryForeground}" />
							<Setter Property="Background" Value="{DynamicResource ControlPrimarySelected}" />
						</Trigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>
	
	<Style x:Key="ServerDataGridStyle" TargetType="DataGrid">
		<Setter Property="RowBackground" Value="Transparent"/>
		<Setter Property="Background" Value="{DynamicResource TransparentDark500}"/>
		<Setter Property="Opacity" Value="0.95"/>
		<Setter Property="BorderThickness" Value="0"/>
	</Style>

	<Style x:Key="SocialTabControlStyle" TargetType="TabControl">
		<Setter Property="Background" Value="{DynamicResource TransparentDark200}"/>
		<Setter Property="BorderThickness" Value="1"/>
		<Setter Property="BorderBrush" Value="{DynamicResource NyanBeigeBrush}"/>
		<Style.Resources>
			<Style TargetType="{x:Type TabPanel}">
				<!-- Center tabs -->
				<Setter Property="HorizontalAlignment" Value="Center" />
			</Style>
		</Style.Resources>
	</Style>

	<Style x:Key="ServerTabControlStyle" TargetType="TabControl">
		<Setter Property="Background" Value="Transparent"/>
		<Setter Property="BorderThickness" Value="1.5"/>
		<Setter Property="BorderBrush" Value="{DynamicResource ControlBorderBrush}"/>
	</Style>

	<Style TargetType="{x:Type TabItem}">
        <Setter Property="Foreground" Value="{DynamicResource TextLight}"/>
		<Setter Property="FontWeight" Value="Bold" />
		<Setter Property="FontFamily" Value="Consolas" />
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type TabItem}">
					<Grid>
						<Border Name="Border" Margin="0,4,-1,0" 
								Background="#999" CornerRadius="2,6,0,0" RenderOptions.EdgeMode="Aliased"
								BorderBrush="{DynamicResource TextDark}" BorderThickness="1.5">
							<Border Name="InnerBorder" BorderBrush="Transparent" BorderThickness="2" CornerRadius="2,6,0,0">
							<ContentPresenter 
									x:Name="ContentSite" VerticalAlignment="Center"
									HorizontalAlignment="Center"
									ContentSource="Header" Margin="8,2">
							</ContentPresenter>
							</Border>
						</Border>
					</Grid>
					<ControlTemplate.Triggers>
						<Trigger Property="IsSelected" Value="True">
							<Setter TargetName="Border" Property="Background" Value="{DynamicResource ControlPrimarySelected}" />
							<Setter TargetName="Border" Property="BorderBrush" Value="{DynamicResource TextDark}" />
                            <Setter Property="Foreground" Value="{DynamicResource NyanDarkPinkBrush}" />
							<Setter TargetName="Border" Property="BorderThickness" Value="2,2,2,0" />
							<Setter TargetName="Border" Property="Margin" Value="0,0,-4,0" />
							<Setter Property="Panel.ZIndex" Value="100" />

							<Setter TargetName="InnerBorder" Property="BorderBrush" Value="{DynamicResource NyanBeigeBrush}" />
						</Trigger>
						<MultiTrigger>
							<MultiTrigger.Conditions>
								<Condition Property="IsMouseOver" Value="True"/>
								<Condition Property="IsSelected" Value="False"/>
							</MultiTrigger.Conditions>
							<MultiTrigger.Setters>
								<Setter TargetName="Border" Property="Background" Value="{DynamicResource ControlPrimaryHover}" />
							</MultiTrigger.Setters>
						</MultiTrigger>
						<Trigger Property="IsEnabled" Value="False">
							<Setter TargetName="Border" Property="Background" Value="{DynamicResource BrushNeutral}" />
							<Setter Property="Foreground" Value="{DynamicResource BrushNeutralLight}" />
						</Trigger>
						<DataTrigger Binding="{Binding Path=HorizontalAlignment, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type TabPanel}}}"
									Value="Center">
							<Setter TargetName="Border" Property="CornerRadius" Value="6,6,0,0"/>
							<Setter TargetName="InnerBorder" Property="CornerRadius" Value="6,6,0,0"/>
						</DataTrigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>
</ResourceDictionary>