services:
  matchmaking-server:
    build:
      context: .
      dockerfile: MatchmakingServer/Dockerfile
    environment:
      APIKEY: ${API_KEY}
      JWT__Issuer: ${JWT_ISSUER}
      JWT__Audience: ${JWT_ISSUER}
      JWT__Secret: ${JWT_SECRET}
      Serilog__WriteTo__1__Name: File
      Serilog__WriteTo__1__Args__path: /app/logs/log-.txt
      Serilog__WriteTo__1__Args__rollingInterval: Day
      ConnectionStrings__DefaultConnection: Host=postgres;Port=5432;Database=database;Username=${DB_USER:-username};Password=${DB_PASSWORD:-password}
    ports:
      - 9100:9000
      - 9101:9001
    volumes:
      - ./MatchmakingServer/appsettings.json:/app/appsettings.json
      - ${LOG_DIR:-./logs}:/app/logs
      - ./MatchmakingServer/Data/:/app/Data/
    healthcheck:
      test: curl --silent --fail http://localhost:9000/health || exit 1
      interval: 15s
      timeout: 20s
      retries: 5
      start_period: 8s
    restart: unless-stopped
    depends_on:
      postgres:
        condition: service_healthy

  postgres:
    image: postgres:15.4-alpine
    restart: unless-stopped
    ports:
      - "127.0.0.1:5432:5432"
    environment:
      POSTGRES_USER: ${DB_USER:-username}
      POSTGRES_PASSWORD: ${DB_PASSWORD:-password}
      POSTGRES_DB: database
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -d database -U $${DB_USER:-username}"]
      interval: 5s
      timeout: 5s
      retries: 5

  adminer:
    image: adminer
    restart: unless-stopped
    environment: 
      ADMINER_DEFAULT_SERVER: postgres
      ADMINER_DEFAULT_DB_NAME: database
      ADMINER_DEFAULT_DB_DRIVER: pgsql
    ports:
      - "127.0.0.1:8080:8080"

volumes:
  postgres_data: